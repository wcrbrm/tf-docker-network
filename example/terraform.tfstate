{
  "version": 4,
  "terraform_version": "1.9.4",
  "serial": 16,
  "lineage": "ec4ab7a6-ccae-03fb-d7cf-e33ddf465f4e",
  "outputs": {},
  "resources": [
    {
      "module": "module.example",
      "mode": "managed",
      "type": "docker_network",
      "name": "internal",
      "provider": "module.example.provider[\"registry.terraform.io/kreuzwerker/docker\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "attachable": false,
            "check_duplicate": null,
            "driver": "bridge",
            "id": "d6aeab0e00eb237a1bd3c72d845e7c6ecfe4ef76ebb78c6df55af1a3b4f6fe99",
            "ingress": false,
            "internal": false,
            "ipam_config": [
              {
                "aux_address": {},
                "gateway": "172.24.0.1",
                "ip_range": "",
                "subnet": "172.24.0.0/16"
              }
            ],
            "ipam_driver": "default",
            "ipam_options": null,
            "ipv6": false,
            "labels": [],
            "name": "example-internal-00000000",
            "options": {},
            "scope": "local"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "module": "module.example",
      "mode": "managed",
      "type": "local_file",
      "name": "changelog",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "#!/usr/bin/env bash\n\nexport YELLOW='\\033[0;33m'\nexport NC='\\033[0m'\nexport P=${PROJECT:-example}\ndocker ps --filter label=project=$P --filter label=changelog.enable=true --format json | jq -r '[.Names, .Labels] | @tsv' | while read ROW; do\n    # name is the first word in the string\n    export NAME=$(echo $ROW | cut -d' ' -f1)\n    echo -e ${YELLOW}## $NAME${NC}\n    # extract the word after changelog.file= before the comma\n    export FN=$(echo $ROW | sed -n 's/.*changelog.file=\\([^,]*\\).*/\\1/p')\n    [[ \"$FN\" == \"\" ]] \u0026\u0026 continue\t\n    docker cp $NAME:$FN - | grep -a '^- '\n    echo\ndone;\n\n",
            "content_base64": null,
            "content_base64sha256": "evBvKSuqgwwIpeoi0CIzjybVXo5fUN5uWoAuOXlqdJY=",
            "content_base64sha512": "V3r4Tz31CMun+zpMz9rwZUFxoIAK40BecpYaD39h4+2W+LAGkgOzVaHBjEWFKvyMQsqXYZfQvW5WHVAPhmY5ow==",
            "content_md5": "ad80d54c2009eedf2f834d0da41e4434",
            "content_sha1": "433372b49d4f4089657258417e42976113d565dc",
            "content_sha256": "7af06f292baa830c08a5ea22d022338f26d55e8e5f50de6e5a802e39796a7496",
            "content_sha512": "577af84f3df508cba7fb3a4ccfdaf0654171a0800ae3405e72961a0f7f61e3ed96f8b0069203b355a1c18c45852afc8c42ca976197d0bd6e561d500f866639a3",
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "./bin/changelog.sh",
            "id": "433372b49d4f4089657258417e42976113d565dc",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "sensitive_content"
              }
            ]
          ]
        }
      ]
    },
    {
      "module": "module.example",
      "mode": "managed",
      "type": "local_file",
      "name": "crontab",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "#!/usr/bin/env bash\nif [[ $UID != 0 ]]; then\n    echo \"Please run this script with sudo:\"\n    echo \"sudo $0 $*\"\n    exit 1\nfi\n\n[[ \"$1\" == \"clean\" ]] \u0026\u0026 {\n  ls -All /etc/cron.d/crontab_*  \n  rm -rf /etc/cron.d/crontab_*\n  echo \"CRONTAB REMOVED\"\n}\n\n[[ \"$1\" == \"init\" ]] \u0026\u0026 {\n  for i in ./cron.d/crontab_*; do\n    export fn=$(echo $i | cut -f3 -d/)\n    if [ -f /etc/cron.d/$fn ]; then\n       echo \"$fn already installed\"\n    else \n       cp -f $i /etc/cron.d/$fn\n       echo \"$fn INSTALLED\"\n    fi\n    chown root /etc/cron.d/$fn\n    chmod 0600 /etc/cron.d/$fn\n  done\n  echo \"CRONTAB INSTALLED\"\n}\n\n",
            "content_base64": null,
            "content_base64sha256": "pyGKbsZRkD9zmXfXxARGMfrhVIIPIC8qB3AefjeusAQ=",
            "content_base64sha512": "ZuxyCQbCtFStGFn/WPyHqapZQhc7iRb6ApGplCRyfTtNsMk9CCea6HOBOKxhMTwNSrN/HRfCE7/yqjQOQkLDAQ==",
            "content_md5": "eecde827e6d24dc5d5bcbe131f9c527f",
            "content_sha1": "b8597fa09563ab3dfb07be0b048ce23821f275d0",
            "content_sha256": "a7218a6ec651903f739977d7c4044631fae154820f202f2a07701e7e37aeb004",
            "content_sha512": "66ec720906c2b454ad1859ff58fc87a9aa5942173b8916fa0291a99424727d3b4db0c93d08279ae8738138ac61313c0d4ab37f1d17c213bff2aa340e4242c301",
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "./bin/crontab.sh",
            "id": "b8597fa09563ab3dfb07be0b048ce23821f275d0",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "sensitive_content"
              }
            ]
          ]
        }
      ]
    },
    {
      "module": "module.example",
      "mode": "managed",
      "type": "local_file",
      "name": "openapi",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "#!/usr/bin/env bash\n\nexport P=${PROJECT:-example}\ndocker ps --filter label=project=$P --filter label=openapi.enable=true --format json | jq -r '[.Names, .Labels] | @tsv' | while read ROW; do\n    # name is the first word in the string\n    export NAME=$(echo $ROW | cut -d' ' -f1)\n    echo \"## $NAME\"\n    # extract the word after openapi.cmd= before the comma\n    export FN=$(echo $ROW | sed -n 's/.*openapi.cmd=\\([^,]*\\).*/\\1/p')\n    [[ \"$FN\" == \"\" ]] \u0026\u0026 continue\t\n    docker exec -e RUST_LOG=none $NAME $FN\n    echo\ndone;\n",
            "content_base64": null,
            "content_base64sha256": "BCi9ZABvG7YZgQqUA3L0HKwQ7xF82JljNoGc07qRtFo=",
            "content_base64sha512": "kCdRGtj7laMYdhJJw1lQpiaWkpdMxsY1vu9d1uJuITjBLjjoDB6o9OkL6+meYz9wN70Hmb4zgmsvQHDa54GZeA==",
            "content_md5": "08b99b921324a50010f159a3291c009c",
            "content_sha1": "7afb06dc945bd9d2d710ee366a489b7661955c20",
            "content_sha256": "0428bd64006f1bb619810a940372f41cac10ef117cd8996336819cd3ba91b45a",
            "content_sha512": "9027511ad8fb95a318761249c35950a6269692974cc6c635beef5dd6e26e2138c12e38e80c1ea8f4e90bebe99e633f7037bd0799be33826b2f4070dae7819978",
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "./bin/openapi.sh",
            "id": "7afb06dc945bd9d2d710ee366a489b7661955c20",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "sensitive_content"
              }
            ]
          ]
        }
      ]
    }
  ],
  "check_results": null
}
